const passport = require('passport');
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const mongoose = require('mongoose');
const keys = require('../config/keys');

const User = mongoose.model('users');

// Here user is that we pulled out from GoogleStrategy's done callack (existing user/user)
passport.serializeUser((user, done) => {
  // done is a callback is called when work is done
  // first argument is the error object
  // second argument is unique id that will be used to identify user in the follow up request
  // user.id is not the google profile id but is mongodb record id
  // because we can't say that every one will login using google and have google profile id
  // but all will have unique record id(generated by mongo)
  done(null, user.id);
});

passport.use(
  new GoogleStrategy(
    {
      clientID: keys.googleClientID,
      clientSecret: keys.googleClientSecret,
      callbackURL: '/auth/google/callback'
    },
    (accessToken, refreshToken, profile, done) => {
      User.findOne({ googleId: profile.id }).then(existingUser => {
        if (existingUser) {
          // We already have a record with the given profile id
          done(null, existingUser);
        } else {
          // We don't have a user record with the ID, make a new record
          new User({ googleId: profile.id })
            .save()
            .then(user => done(null, user));
        }
      });
    }
  )
);
